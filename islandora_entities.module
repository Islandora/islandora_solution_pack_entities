<?php

/**
 * @file
 * Handles entity support for Islandora.
 */

// Content models.
define('ISLANDORA_ENTITIES_PERSON_CONTENT_MODEL', 'islandora:personCModel');
define('ISLANDORA_ENTITIES_EVENT_CONTENT_MODEL', 'islandora:eventCModel');
define('ISLANDORA_ENTITIES_PLACE_CONTENT_MODEL', 'islandora:placeCModel');
define('ISLANDORA_ENTITIES_ORGANIZATION_CONTENT_MODEL', 'islandora:organizationCModel');
define('ISLANDORA_ENTITIES_ENTITY_CONTENT_MODEL', 'islandora:entityCModel');

// Permissions.
define('ISLANDORA_ENTITIES_ADMINISTER_PERMISSION', 'administer islandora entities');
define('ISLANDORA_ENTITIES_EDIT_SCHOLAR_METADATA', 'edit scholar metadata');

/**
 * Implements hook_permission().
 */
function islandora_entities_permission() {
  return array(
    ISLANDORA_ENTITIES_ADMINISTER_PERMISSION => array(
      'title' => t('Administer Islandora Entities'),
      'description' => t('Access Islandora Entities administration page.'),
    ),
    ISLANDORA_ENTITIES_EDIT_SCHOLAR_METADATA => array(
      'title' => t('Edit Scholar Metadata'),
      'description' => t('Access Islandora Entities administration page.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function islandora_entities_menu() {
  return array(
    'islandora/entities/search/%' => array(
      'title' => 'Query Entities',
      'page callback' => 'islandora_entities_query_entities_callback',
      'page arguments' => array(3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/callbacks.inc',
      'access arguments' => array('search islandora solr'),
    ),
    'islandora/entities/autocomplete/%' => array(
      'title' => 'Form Callbacks',
      'page callback' => 'islandora_entities_autocomplete',
      'page arguments' => array(3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/callbacks.inc',
      'access arguments' => array('search islandora solr'),
    ),
    'islandora/entities/%/rss' => array(
      'title' => 'RSS Callback',
      'page callback' => 'islandora_entities_rss',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/entities_rss.inc',
      'access arguments' => array('search islandora solr'),
    ),
    'admin/islandora/solution_pack_config/entities' => array(
      'title' => 'Islandora Entities',
      'description' => 'Select default collections for entity types.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_entities_settings'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/admin.form.inc',
      'access arguments' => array(ISLANDORA_ENTITIES_ADMINISTER_PERMISSION),
    ),
    'islandora/object/%islandora_object/EAC_CPF' => array(
      'title' => 'EAC-CPF',
      'page callback' => 'islandora_entities_eac_cpf_view',
      'page arguments' => array(2),
      'type' => MENU_LOCAL_TASK,
      'access callback' => 'islandora_entities_access',
      'access arguments' => array(2),
    ),
    'islandora/object/%islandora_object/manage/object/updatetn' => array(
      'title' => 'Update Thumbnail',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_entities_update_tn', 2),
      'type' => MENU_LOCAL_ACTION,
      'file' => 'includes/tn_upload.form.inc',
      'access callback' => 'islandora_entity_update_tn_access',
      'access arguments' => array(2),
    ),
    'islandora/object/%islandora_object/citations' => array(
      'title' => 'Citations',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'islandora_entities_citation_form',
        2,
        'citations',
      ),
      'access callback' => 'islandora_entities_citation_access',
      'access arguments' => array(2, "citations"),
      'file' => 'includes/citation_tab.inc',
      'weight' => 1,
    ),
    'islandora/object/%islandora_object/theses' => array(
      'title' => 'Theses',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_entities_citation_form', 2, 'theses'),
      'access callback' => 'islandora_entities_citation_access',
      'access arguments' => array(2, "theses"),
      'file' => 'includes/citation_tab.inc',
      'weight' => 2,
    ),
  );
}

/**
 * Access callback for updating entity thumbnail.
 *
 * @param AbstractObject $object
 *   The object in which to update said thumbnail. Confirm
 *   content model.
 *
 * @return bool
 *   TRUE if $object represents a person entity, otherwise, FALSE.
 */
function islandora_entity_update_tn_access(AbstractObject $object) {
  module_load_include('inc', 'islandora_basic_collection', 'includes/utilities');

  $collection_models = islandora_basic_collection_get_collection_content_models();
  $is_a_collection = (
      (count(array_intersect($collection_models, $object->models)) > 0) &&
      isset($object['COLLECTION_POLICY'])
      );
  if ($is_a_collection) {
    return FALSE;
  }
  $policy_stack = array(
    ISLANDORA_ENTITIES_ORGANIZATION_CONTENT_MODEL,
    ISLANDORA_ENTITIES_EVENT_CONTENT_MODEL,
    ISLANDORA_ENTITIES_PLACE_CONTENT_MODEL,
    ISLANDORA_ENTITIES_PERSON_CONTENT_MODEL,
    ISLANDORA_ENTITIES_ENTITY_CONTENT_MODEL,
  );
  if (count(array_intersect($policy_stack, $object->models)) == 0) {
    return FALSE;
  }
  return islandora_object_access(ISLANDORA_MANAGE_PROPERTIES, $object);
}

/**
 * Implements hook_CMODEL_PID_islandora_ingest_steps().
 */
function islandora_entities_islandora_personCModel_islandora_ingest_steps(array $form_state) {
  return array(
    'islandora_entities_tn_file_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_entities_tn_upload_form',
      'module' => 'islandora_entities',
      'file' => 'includes/tn_upload.form.inc',
    ),
  );
}

/**
 * Determine visibility of the EAC-CPF data.
 *
 * We have read-access to the EAC-CPF stream and a read-only form mapping.
 *
 * @param AbstractObject $object
 *   The Tuque object.
 *
 * @return bool
 *   TRUE if access is granted, FALSE otherwise.
 */
function islandora_entities_access(AbstractObject $object) {
  return isset($object['EAC-CPF']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object['EAC-CPF']) &&
      islandora_entities_get_cmodel_form_name($object);
}

/**
 * Generate markup to display the entity form.
 *
 * @param AbstractObject $object
 *   Fedora object to render the form for.
 */
function islandora_entities_eac_cpf_view(AbstractObject $object) {
  $block = array();
  $block['content'] = array(
    '#markup' => islandora_entities_eac_cpf_markup($object),
  );
  return $block;
}

/**
 * Return a rendured drupal from as html.
 *
 * @param AbstractObject $object
 *   The fedora object to generate the rendered html.
 *
 * @return unknown
 *   The rendered HTML for the given content form.
 */
function islandora_entities_eac_cpf_markup(AbstractObject $object) {
  $form = array(
    'collection_metadata' => array(),
  );
  if (isset($object['EAC-CPF'])) {
    $content = $object['EAC-CPF']->content;
    // We need to determine of entity relationship exists in the content model
    // relationships, and display the correct form.
    $metadata = drupal_get_form(islandora_entities_get_cmodel_form_name($object), $content);
    $form['collection_metadata']['metadata'] = $metadata;
  }
  $output = drupal_render($form);
  return $output;
}

/**
 * Get the correct form name based on the content model.
 *
 * @param AbstractObject $object
 *   The current relations for the given fedora object.
 *
 * @return string|bool
 *   A string containing the form name to display, or boolean FALSE if the
 *   we do not have a mapping.
 */
function islandora_entities_get_cmodel_form_name(AbstractObject $object) {
  $mapping = array(
    ISLANDORA_ENTITIES_PERSON_CONTENT_MODEL => 'Person EAC-CPF Read Only',
    ISLANDORA_ENTITIES_EVENT_CONTENT_MODEL => 'Event EAC-CPF Read Only',
    ISLANDORA_ENTITIES_PLACE_CONTENT_MODEL => 'Place EAC-CPF Read Only',
    ISLANDORA_ENTITIES_ORGANIZATION_CONTENT_MODEL => 'Organization EAC-CPF Read Only',
  );

  $matches = array_intersect($object->models, array_keys($mapping));
  $match = reset($matches);

  if ($match) {
    return $mapping[$match];
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_xml_form_builder_form_associations().
 */
function islandora_entities_xml_form_builder_form_associations() {
  return array(
    'islandora_event_form' => array(
      'content_model' => ISLANDORA_ENTITIES_EVENT_CONTENT_MODEL,
      'form_name' => 'Event EAC-CPF form',
      'dsid' => 'EAC-CPF',
      'title_field' => array(
        'cpfdesc',
        'general_ident',
        'ident',
        'name_entries',
        0,
        'forename',
      ),
      'transform' => 'eaccpf_to_dc.xsl',
      'template' => FALSE,
    ),
    'islandora_organization_form' => array(
      'content_model' => ISLANDORA_ENTITIES_ORGANIZATION_CONTENT_MODEL,
      'form_name' => 'Organization EAC-CPF form',
      'dsid' => 'EAC-CPF',
      'title_field' => array(
        'cpfdesc',
        'general_ident',
        'ident',
        'name_entries',
        0,
        'forename',
      ),
      'transform' => 'eaccpf_to_dc.xsl',
      'template' => FALSE,
    ),
    'islandora_place_form' => array(
      'content_model' => ISLANDORA_ENTITIES_PLACE_CONTENT_MODEL,
      'form_name' => 'Place EAC-CPF form',
      'dsid' => 'EAC-CPF',
      'title_field' => array(
        'cpfdesc',
        'general_ident',
        'ident',
        'name_entries',
        0,
        'forename',
      ),
      'transform' => 'eaccpf_to_dc.xsl',
      'template' => FALSE,
    ),
    'islandora_person_form' => array(
      'content_model' => ISLANDORA_ENTITIES_PERSON_CONTENT_MODEL,
      'form_name' => 'Person EAC-CPF form',
      'dsid' => 'EAC-CPF',
      'title_field' => array(
        'cpfdesc',
        'general_ident',
        'ident',
        'name_entries',
        0,
        'forename',
      ),
      'transform' => 'eaccpf_to_dc.xsl',
      'template' => FALSE,
    ),
    'islandora_mads_person_form' => array(
      'content_model' => ISLANDORA_ENTITIES_PERSON_CONTENT_MODEL,
      'form_name' => 'Scholar MADS form',
      'dsid' => 'MADS',
      'title_field' => array(
        'authority',
        'display_name',
      ),
      'transform' => 'mads_to_dc.xsl',
      'template' => FALSE,
    ),
    'islandora_mads_organization_form' => array(
      'content_model' => ISLANDORA_ENTITIES_ORGANIZATION_CONTENT_MODEL,
      'form_name' => 'Department MADS form',
      'dsid' => 'MADS',
      'title_field' => array(
        'authority',
        'name',
        'auth_dept',
      ),
      'transform' => 'mads_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_xml_form_builder_forms().
 */
function islandora_entities_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_entities');
  // Also load read only version's of the form.
  return array(
    'Person EAC-CPF Read Only' => array(
      'form_file' => "$module_path/xml/person_eac_cpf_read_only.xml",
    ),
    'Event EAC-CPF Read Only' => array(
      'form_file' => "$module_path/xml/event_eac_cpf_read_only.xml",
    ),
    'Place EAC-CPF Read Only' => array(
      'form_file' => "$module_path/xml/place_eac-cpf_read_only.xml",
    ),
    'Organization EAC-CPF Read Only' => array(
      'form_file' => "$module_path/xml/organization_eac_cpf_read_only.xml",
    ),
    'Event EAC-CPF form' => array(
      'form_file' => "$module_path/xml/event_eaccpf_form.xml",
    ),
    'Organization EAC-CPF form' => array(
      'form_file' => "$module_path/xml/organization_eaccpf_form.xml",
    ),
    'Person EAC-CPF form' => array(
      'form_file' => "$module_path/xml/person_eaccpf_form.xml",
    ),
    'Place EAC-CPF form' => array(
      'form_file' => "$module_path/xml/place_eaccpf_form.xml",
    ),
    'Scholar MADS form' => array(
      'form_file' => "$module_path/xml/scholar_mads_form.xml",
    ),
    'Department MADS form' => array(
      'form_file' => "$module_path/xml/dept_mads_form.xml",
    ),
  );
}
/**
 * This hook allows modules to register XSLT self-transformations.
 *
 * @return array
 *   An associative array mapping a shortened name to the full path of the
 *   transformation.
 */
function islandora_entities_xml_form_builder_get_self_transforms() {
  return array(
    'cleanup_and_order_mads.xsl' => drupal_get_path('module', 'islandora_entities') . '/xml/cleanup_and_order_mads.xsl',
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Hacks an autocomplete path from this solution pack into the scholar forms.
 */
function islandora_entities_form_xml_form_builder_datastream_form_alter(&$form, &$form_state, $form_id) {
  if (module_exists('islandora_scholar')) {
    module_load_include('inc', 'islandora_entities', 'includes/utilities');
    if (isset($form_state['association']['id'])) {
      $id = $form_state['association']['id'];
      if (strcmp($id, 'islandora_scholar_mods_form') == 0) {
        islandora_entities_add_autocompletes_to_citation_form($form);
      }
      elseif (strcmp($id, 'islandora_thesis_mods_form') == 0) {
        islandora_entities_add_autocompletes_to_thesis_form($form);
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Hacks an autocomplete path from this solution pack into the scholar forms.
 */
function islandora_entities_form_xml_form_builder_ingest_form_alter(&$form, &$form_state, $form_id) {
  if (module_exists('islandora_scholar')) {
    module_load_include('inc', 'islandora_entities', 'includes/utilities');
    if (isset($form_state['islandora']['step_storage']['xml_form_builder_metadata_step']['association']['id'])) {
      $id = $form_state['islandora']['step_storage']['xml_form_builder_metadata_step']['association']['id'];
      if (strcmp($id, 'islandora_scholar_mods_form') == 0) {
        islandora_entities_add_autocompletes_to_citation_form($form);
      }
      elseif (strcmp($id, 'islandora_thesis_mods_form') == 0) {
        islandora_entities_add_autocompletes_to_thesis_form($form);
      }
    }
  }
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_entities_islandora_required_objects(IslandoraTuque $connection) {
  module_load_include('inc', 'islandora_entities', 'includes/utilities');
  $module_path = drupal_get_path('module', 'islandora_entities');

  // Entity Content Model.
  $entity_content_model = $connection->repository->constructObject('islandora:entityCModel');
  $entity_content_model->owner = 'fedoraAdmin';
  $entity_content_model->label = 'Islandora Entity Content Model';
  $entity_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  islandora_entities_ingest__entity_ds_composite_datastream($entity_content_model);

  // Person Content Model.
  $person_content_model = $connection->repository->constructObject('islandora:personCModel');
  $person_content_model->owner = 'fedoraAdmin';
  $person_content_model->label = 'Islandora Person Content Model';
  $person_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  islandora_entities_ingest__entity_ds_composite_datastream($person_content_model);

  // Place Content Model.
  $place_content_model = $connection->repository->constructObject('islandora:placeCModel');
  $place_content_model->owner = 'fedoraAdmin';
  $place_content_model->label = 'Islandora Place Content Model';
  $place_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  islandora_entities_ingest__entity_ds_composite_datastream($place_content_model);

  // Event Content Model.
  $event_content_model = $connection->repository->constructObject('islandora:eventCModel');
  $event_content_model->owner = 'fedoraAdmin';
  $event_content_model->label = 'Islandora Event Content Model';
  $event_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  islandora_entities_ingest__entity_ds_composite_datastream($event_content_model);

  // Organization Content Model.
  $organization_content_model = $connection->repository->constructObject('islandora:organizationCModel');
  $organization_content_model->owner = 'fedoraAdmin';
  $organization_content_model->label = 'Islandora Organization Content Model';
  $organization_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  islandora_entities_ingest__entity_ds_composite_datastream($organization_content_model);

  // Entity Collection.
  $entity_collection = $connection->repository->constructObject('islandora:entity_collection');
  $entity_collection->owner = 'fedoraAdmin';
  $entity_collection->label = 'Entity Collection';
  $entity_collection->models = 'islandora:collectionCModel';
  $entity_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // TN Datastream.
  $thumbnail_datastream = $entity_collection->constructDatastream('TN', 'M');
  $thumbnail_datastream->label = 'Thumbnail';
  $thumbnail_datastream->mimetype = 'image/png';
  $thumbnail_datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $entity_collection->ingestDatastream($thumbnail_datastream);
  // Collection policy datastream.
  $collection_policy_datastream = $entity_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $collection_policy_datastream->label = 'Collection policy';
  $collection_policy_datastream->mimetype = 'text/xml';
  $collection_policy_datastream->setContentFromFile("$module_path/xml/islandora_entity_collection_policy.xml", FALSE);
  $entity_collection->ingestDatastream($collection_policy_datastream);

  return array(
    'islandora_entities' => array(
      'title' => 'Islandora entity',
      'objects' => array(
        $entity_content_model,
        $place_content_model,
        $person_content_model,
        $event_content_model,
        $organization_content_model,
        $entity_collection,
      ),
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_object_ingested().
 */
function islandora_entities_islandora_personCModel_islandora_object_ingested(AbstractObject $fedora_object) {
  module_load_include('inc', 'islandora_entities', 'includes/utilities');
  islandora_entities_add_entity_content_model($fedora_object);
}

/**
 * Implements hook_CMODEL_PID_islandora_object_ingested().
 */
function islandora_entities_islandora_placeCModel_islandora_object_ingested(AbstractObject $fedora_object) {
  module_load_include('inc', 'islandora_entities', 'includes/utilities');
  islandora_entities_add_entity_content_model($fedora_object);
}

/**
 * Implements hook_CMODEL_PID_islandora_object_ingested().
 */
function islandora_entities_islandora_eventCModel_islandora_object_ingested(AbstractObject $fedora_object) {
  module_load_include('inc', 'islandora_entities', 'includes/utilities');
  islandora_entities_add_entity_content_model($fedora_object);
}

/**
 * Implements hook_CMODEL_PID_islandora_object_ingested().
 */
function islandora_entities_islandora_organizationCModel_islandora_object_ingested(AbstractObject $fedora_object) {
  module_load_include('inc', 'islandora_entities', 'includes/utilities');
  islandora_entities_add_entity_content_model($fedora_object);
}

/**
 * Implements hook_xml_form_builder_get_transforms().
 */
function islandora_entities_xml_form_builder_get_transforms() {
  $module_path = drupal_get_path('module', 'islandora_entities');
  return array(
    'eaccpf_to_dc.xsl' => "$module_path/xml/eaccpf_to_dc.xsl",
    'mads_to_dc.xsl' => "$module_path/xml/mads_to_dc.xsl",
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_datastream_access().
 */
function islandora_entities_islandora_personCModel_islandora_datastream_access($op, $object, $user) {
  if ($op == 'edit fedora metadata') {
    if ($object->id == 'MADS') {
      $owner = $object->parent->owner;
      return ($user->name == $owner || user_access(ISLANDORA_ENTITIES_EDIT_SCHOLAR_METADATA));
    }
  }
}

/**
 * Implements hook_theme().
 */
function islandora_entities_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_person' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-person',
      'pattern' => 'islandora_person__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_dept' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-dept',
      'pattern' => 'islandora_dept__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_entities_islandora_personCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_person', array('object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_entities_islandora_organizationCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_dept', array('object' => $object));
  return array('' => $output);
}

/**
 * Access callback for citations tab.
 */
function islandora_entities_citation_access($object, $type) {
  module_load_include('inc', 'islandora_entities', 'includes/utilities');
  if (in_array('islandora:personCModel', $object->models)) {
    if ($object['MADS']) {
      $mads = $object['MADS']->content;
      $simplexml = simplexml_load_string($mads);
      $identifiers = $simplexml->identifier;
      foreach ($identifiers as $identifier) {
        if ($identifier['type'] == 'u1') {
          $results = islandora_entities_get_related((string) $identifier, (string) $simplexml->authority->titleInfo->title, $type);
        }
      }
    }
  }
  return is_object($object) && isset($results);
}

/**
 * Implements hook_preprocess_html().
 */
function islandora_entities_preprocess_html(&$variables) {
  $object = menu_get_object('islandora_object', 2);
  // Making sure the router position is there, and that an object gets loaded,
  // and that it has the right content model, in that order.
  if (is_object($object) && in_array('islandora:entityCModel', $object->models)) {
    $variables['classes_array'][] = "islandora-entity";
  }
}
